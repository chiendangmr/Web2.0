@{
    ViewData["Title"] = "Home Page";
}
<head>
    <script type="text/javascript" src="~/lib/jquery/dist/jquery.js"></script>    
    
    <script src="~/lib/kendo/js/kendo.all.min.js"></script>
    <script type="text/javascript" src="~/js/player/subTitle.js"></script>
    <script type="text/javascript" src="~/js/player/timecode.js"></script>
    <script type="text/javascript" src="~/js/player/mediaelement.js"></script>
    <script type="text/javascript" src="~/js/player/audioVisualizer.js"></script>
    <script type="text/javascript" src="~/js/player/mediaelement-and-player.js"></script>

    <link rel="stylesheet" href="~/css/player/subtitle.css">
    <link rel="stylesheet" href="/css/player/player.css">
    <link rel="stylesheet" href="/css/player/mediaelementplayer.css">
    <link rel="stylesheet" href="/css/player/audioVisualizer.css">
</head>

<div class="container-vertical-flex" style="height:100%">
    <div class="flex flex-3" style="background-color:aqua">
        <div class="container-flex">
            <div class="flex flex-1">
                <div class="fields ui-corner-bottom" style="background-color:#1a1c22;">
                    <div class="media-infor-content" style="width: 100%;">

                    </div>
                    <div id="player0" class="mejs-container mejs-video" style="height:300px; margin: auto;text-align:center;">

                    </div>
                    <script>
                        var width = window.innerWidth;
                        var height = window.innerHeight;
                        if (height > 900) {

                            $("#player0").height(450);
                        }
                    </script>
                    <br />

                    <form id="subTitleFormx">
                        <div class="row" style="width:100%; text-align:center">
                            <div id="timeTrim" style="height:40px;">
                                <div id="status" style="height:14px;"></div>
                                <div class="subTitleTime hidden">Sub in</div>
                                <div id="startTimeSubCur" class="subTitleTime hidden" style="width: 65px; margin-left: 5px" converter="timeConverter"></div>
                                <div class="subTitleTime  hidden">--></div>
                                <div id="endTimeSubCur" class="subTitleTime hidden" style="width: 65px; margin-left: 5px" converter="timeConverter"></div>
                                <div class="row">
                                    <div class="col-md-2">
                                        <select type="text" class="navbar-form-control" id="videoSpeedSelect">
                                            <option value="1"> X1 </option>
                                            <option value="4">X4</option>
                                            <option value="8"> X8 </option>
                                            <option value="16">X16</option>
                                        </select>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="hidden">
                                            <input id="enabledSpectrum" checked="checked" type="checkbox" style="width: 17px">
                                            <label onclick="changeEnabledSpectrum()" style="font-size: 11px">Spectrum</label>
                                        </div>
                                        <div id="timeCodeInput">
                                            <input id="startTimeTrim" disabled="disabled" value="00:00:00:00" converter="timeConverter" style="border-radius: 3px;  border: 1.4px solid;" size="8" />
                                            <span> : </span>
                                            <input id="endTimeTrim" disabled="disabled" value="00:00:00:00" converter="timeConverter" style="border-radius: 3px;  border: 1.4px solid;" size="8" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="controls" style="width:100%; text-align:center">
                                <button type="button" title="play" class="btn btn-default-outline" id="ppBtn">
                                    <span class="icon">
                                        <i class="icon icon-play "></i>
                                    </span>
                                </button>
                                <button type="button" class="btn btn-default-outline" title="play as MarkIn, MarkOut" id="playBackBtn" style="margin-right: 25px">
                                    <span class="icon">
                                        <i class="icon icon-eye"></i>
                                    </span>
                                </button>
                                <button type="button" class="btn btn-default-outline" title="to start" id="firstBtn">
                                    <span class="icon">
                                        <i class="icon icon-to-start "></i>
                                    </span>
                                </button>

                                <button type="button" class="btn btn-default-outline" title="fast backward" id="ffbwBtn">
                                    <span class="icon icon-stack">
                                        <i class="icon-fast-backward icon-stack-1x" style="left: -0.125em"></i>
                                        <i class="icon-fast-backward icon-stack-1x" style="left: 0.3em"></i>
                                    </span>

                                </button>

                                <button type="button" class="btn btn-default-outline" title="backward" id="prevBtn">
                                    <span class="icon">
                                        <i class="icon icon-fast-backward "></i>
                                    </span>
                                </button>
                                <button type="button" class="btn btn-default-outline" title="forward" id="fwdBtn">
                                    <span class="icon">
                                        <i class="icon icon-fast-forward "></i>
                                    </span>
                                </button>

                                <button type="button" class="btn btn-default-outline" title="fast forward" id="fffwBtn">
                                    <span class="icon icon-stack">
                                        <i class="icon-fast-forward icon-stack-1x" style="left: -0.125em"></i>
                                        <i class="icon-fast-forward icon-stack-1x" style="left: 0.3em"></i>
                                    </span>
                                </button>

                                <button type="button" class="btn btn-default-outline" title="mark in" id="markInBtn">
                                    <span class="icon">
                                        <i class="icon icon-left-open"></i>
                                    </span>
                                </button>

                                <button type="button" class="btn btn-default-outline" title="mark out" id="markOutBtn">
                                    <span class="icon">
                                        <i class="icon icon-right-open"></i>
                                    </span>
                                </button>
                                <button type="button" class="btn btn-default-outline" title="save cut" id="btnSaveCut">
                                    <span class="icon">
                                        <i class="icon icon-floppy"></i>
                                    </span>
                                </button>
                            </div>
                        </div>
                        <br />
                    </form>
                </div>
            </div>
            <div class="flex flex-1">
                <div id="tabs">
                    <ul>
                        <li id="tabBtn1"><a href="#tabs-1">File phụ đề</a></li>
                        <li id="tabBtn2"><a href="#tabs-2">Lịch phụ đề</a></li>
                        <li id="tabBtn3"><a href="#tabs-3">Lịch ghi Lowres</a></li>
                    </ul>
                    <div id="tabs-1" class="content">
                        <button class="btnGeneral" id="btnAddFolder">Thêm thư mục...</button>
                        <div class="css-treeview">
                            <ul id="folderUl" class="folders"></ul>
                        </div>
                        <input type="file" id="FileUpload1" />
                    </div>
                    <div id="tabs-2">
                        <ul id="ulSubSchedule"></ul>
                    </div>
                    <div id="tabs-3">
                        <button class="btnGeneral" id="btnAddRecord">Thêm lịch...</button>
                        <table class="MyTable" id="recordScheduleTable"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>$('#tabs').tabs();</script>
    <div class="flex flex-1" style="background-color: aquamarine">
        <div style="margin: 10px 10px;">
            <h3>Zoom:</h3>
            <div id="zoomBar">
                <div id="zoomIn">IN</div>
                <div id="zoomOut">OUT</div>
            </div>
            <div id="zoom-slider123"></div>
        </div>
        <div id="slider123" class="time-slider"></div>
        <p id="messages"></p>
    </div>
</div>
<script>

    _basePath = "";
    _translator = {};
    _playerOptions = {
        "safetyFrame": false, "currentTime": false, "initVisualizer": false, "hiddenVuMeter": true, "hiddenSpectrum": true,
        "originUrl": "/origin/",
        "tempUrl": "/temp/",
        "startTime": "00:00:00.00", "endTime": "00:56:37.21",
        "startTimeOffset": "00:00:00.00", "endTimeOffset": "00:56:37.21",
        "src": "/Videos/TVC/placeHolder.mp4"
    };
    loadPlayer(_playerOptions);
    hdplayer.addType = 1;
    initControlButtons();    

    function getFileNameFromPath(path) {
        path = path.replace(/\\/g, "/").replace(/\/\//g, "/");
        var arr = path.split("/");
        var fileName = path;
        if (arr.length > 0) {
            fileName = arr[arr.length - 1];
        }
        return fileName;
    }


    function mobilecheck() {
        return false;
    }

    _disConvertSubToHtml = true;
    _allSubItems = [{ "itemId": "21652", "startTime": "00:12:23.07", "endTime": "00:16:48.18", "type": 1, "text": "", "startTimeFloat": 743.28, "subIndex": 0, "fullName": "Lê Văn Thành", "subtitleId": "154", "userId": 1 }, { "itemId": "21653", "startTime": "00:20:13.13", "endTime": "00:22:37.15", "type": 1, "text": "comment", "startTimeFloat": 1213.52, "subIndex": 0, "fullName": "Lê Văn Thành", "subtitleId": "154", "userId": 1 }];
    _subItems = _allSubItems;

    _eventType = { "enabledSubtitle": false, "enabledQc": true, "enabledSecondaryEvent": false };
    function checkCookies() {
        return false;
    }

    function checkEnabledVu(that) {
        var checked = $(that).attr("checked");
        if (typeof checked != "undefined" && (checked === "checked" || checked === true)) {
            if (typeof hdplayer != "undefined" && typeof hdplayer.audioVisual != "undefined") {
                hdplayer.audioVisual.options.vuDisabled = false;
                $(".vu_meter").css("visibility", "visible");
            }
            $.cookie("vu_meter_disabled", "false", { 'expires': 14 });
        } else {
            if (typeof hdplayer != "undefined" && typeof hdplayer.audioVisual != "undefined") {
                hdplayer.audioVisual.options.vuDisabled = true;
                hdplayer.audioVisual.clearVu();
            }
            $.cookie("vu_meter_disabled", "true", { 'expires': 14 });
            $(".vu_meter").css("visibility", "hidden");
        }
    }

    function checkEnabledSpectrum(that) {
        var checked = $(that).attr("checked");
        if (typeof checked != "undefined" && (checked == "checked" || checked === true)) {
            if (typeof hdplayer != "undefined" && typeof hdplayer.audioVisual != "undefined") {
                hdplayer.audioVisual.options.drumDisabled = false;
                $("#fft").css("visibility", "visible");
            }
            $.cookie("spectrum_disabled", "false", { 'expires': 14 });
        } else {
            if (typeof hdplayer != "undefined" && typeof hdplayer.audioVisual != "undefined") {
                hdplayer.audioVisual.options.drumDisabled = true;
                hdplayer.audioVisual.clearDrum();
            }
            $.cookie("spectrum_disabled", "true", { 'expires': 14 });
            $("#fft").css("visibility", "hidden");
        }
    }
    function changeEnabledVu() {
        var that = $("#enabledVuMeter");
        var checked = that.attr("checked");
        if (typeof checked != "undefined" && (checked === "checked" || checked === true)) {
            that.attr("checked", false);
        } else {
            that.attr("checked", "checked");
        }
        checkEnabledVu(that);
    }
    function changeEnabledSpectrum() {
        var that = $("#enabledSpectrum");
        var checked = that.attr("checked");
        if (typeof checked != "undefined" && (checked === "checked" || checked === true)) {
            that.attr("checked", false);
        } else {
            that.attr("checked", "checked");
        }
        try {
            checkEnabledSpectrum(that);
        } catch (e) {
            console.log(e);
        }
    }

    function checkEnabledSubtile(that) {
        var checked = $(that).attr("checked");
        if (typeof checked != "undefined" && (checked == "checked" || checked === true)) {
            $("#subtitlePreview").removeClass("hidden");
        } else {
            $("#subtitlePreview").addClass("hidden");
        }
    }

    function initFormControl() {
        checkCookies();
        $("#enabledVuMeter").change(function () { checkEnabledVu(this) });
        $("#enabledSpectrum").change(function () {
            var that = this;
            checkEnabledSpectrum(that);
        });
        $("#videoSpeedSelect").change(function () {
            hdplayer.play();
            hdplayer.rate(parseInt($(this).val()));
            _rate = $(this).val();
        });

    }
    if (!window.mobilecheck()) {
        initFormControl();
    }
</script>
